/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EscolhaDiretorio.java
 *
 * Created on 12/12/2011, 17:21:12
 */

package formularios;

import auxiliar.AtualizarDados;
import auxiliar.Avisos;
import auxiliar.Diretorios;
import auxiliar.Icones;
import auxiliar.LogUsuario;
import auxiliar.MostrarDados;
import auxiliar.SolicitarDados;
import java.awt.Color;
import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author Ayrton Monier
 */
public class EscolhaDiretorio extends javax.swing.JDialog {

    public boolean c_continuar = false;

    /** Creates new form EscolhaDiretorio */
    public EscolhaDiretorio(java.awt.Frame parent, boolean modal) {
        
        super(parent, modal);
        
        initComponents();
        
        setTitle(Avisos.TIT_JAN_ESC_DIR_ARQ); 


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lb_logoArquivos = new javax.swing.JLabel();
        bt_escolherLocal = new javax.swing.JButton();
        tf_pasta = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lb_textoLocalEscolhido = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        bt_continuar = new javax.swing.JButton();
        lb_local = new javax.swing.JLabel();
        lb_iconeInfo = new javax.swing.JLabel();
        bt_redefinirPasta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lb_logoArquivos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icones/grandes/logo-local-arquivos.png"))); // NOI18N

        bt_escolherLocal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icones/16/procurar.png"))); // NOI18N
        bt_escolherLocal.setText("Pasta ok, Escolher local...");
        bt_escolherLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_escolherLocalActionPerformed(evt);
            }
        });

        tf_pasta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_pastaKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 10)); // NOI18N
        jLabel2.setText("Nome da pasta:");

        lb_textoLocalEscolhido.setForeground(new java.awt.Color(0, 0, 204));
        lb_textoLocalEscolhido.setText("Local escolhido:");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icones/16/cancelar.png"))); // NOI18N
        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        bt_continuar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icones/16/ok.png"))); // NOI18N
        bt_continuar.setText("Ok, o local de seus arquivos foi definido. Concluir!");
        bt_continuar.setEnabled(false);
        bt_continuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_continuarActionPerformed(evt);
            }
        });

        lb_local.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        lb_local.setText("*");

        lb_iconeInfo.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        lb_iconeInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icones/16/informacao.png"))); // NOI18N
        lb_iconeInfo.setText("Caso esta pasta seja alterada no S.O você perderá a referência de seus arquivos.");

        bt_redefinirPasta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icones/16/redefinir-pasta.png"))); // NOI18N
        bt_redefinirPasta.setText("Redefinir meu local de arquivos...");
        bt_redefinirPasta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_redefinirPastaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_logoArquivos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lb_local, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lb_textoLocalEscolhido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bt_continuar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lb_iconeInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_pasta, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bt_redefinirPasta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_escolherLocal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_logoArquivos, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_pasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_escolherLocal)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_redefinirPasta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_textoLocalEscolhido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_local)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_continuar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_iconeInfo)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
    }// </editor-fold>//GEN-END:initComponents

    private void bt_escolherLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_escolherLocalActionPerformed


        if(bt_escolherLocal.getText().equals(Avisos.TEXTO_PASTA_OK_ESC_LOC)){

         
            String l_localArquivos;
            String l_localArquivosAtual = lb_local.getText();
            boolean l_escolhido = true;
            
            
                do{
                    //local arquivos atual
                    if(l_escolhido)
                        l_localArquivosAtual = lb_local.getText();

                        //escolhe um novo local valido
                        l_escolhido = escolhaDiretorio(tf_pasta.getText());
                        l_localArquivos = lb_local.getText();

                            //caso seja escolhido
                            if(l_escolhido){

                                //caso seja o mesmo local que ele queira escolher...
                                if(l_localArquivos.equals(l_localArquivosAtual)){

                                    l_escolhido = true;

                                //caso um novo local
                                }else{

                                        //caso o local possa ser criado...
                                        if(SolicitarDados.s_SolicitarDados.criarPastasFacecard(l_localArquivos+"\\"+Diretorios.PASTA_ARQUIVOS)){
                                            l_escolhido = true;

                                            //caso ja tenha sido escolhido um local anteriormente...
                                            if(!l_localArquivosAtual.equals("*")){

                                                //remove o local atual 
                                                File l_dirArquivosAtual = new File(l_localArquivosAtual+"\\"+Diretorios.PASTA_ARQUIVOS);
                                                    l_dirArquivosAtual.delete();
                                                File l_localAtual = new File(l_localArquivosAtual);
                                                    l_localAtual.delete();
                                            }


                                        }
                                        //caso o local nao possa ser criado...
                                        else{

                                            //msg de aviso
                                            MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.TEXTO_N_E_LOCAL_INDISPONIVEL, "aviso");
                                            l_escolhido = false;
                                        }

                                }

                            //caso cancele a escolha...
                            }else
                                l_escolhido = true;


//                                else{
//
//                                        //msg de aviso
//                                        MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.TEXTO_N_E_LOCAL_INDISPONIVEL, "aviso");
//                                        l_escolhido = false;
//                                }


                }while(l_escolhido == false);


        }else if(bt_escolherLocal.getText().equals(Avisos.TEXTO_ALTERAR_LOCAL)){


                tf_pasta.setEditable(true);
                tf_pasta.requestFocus();
                bt_escolherLocal.setText(Avisos.TEXTO_PASTA_OK_ESC_LOC);
                bt_continuar.setEnabled(false); 
            
            
        }else if(bt_escolherLocal.getText().equals(Avisos.TEXTO_PROCURAR_MINHA_PASTA)){

            boolean l_encontrado =  false;

            String l_diretorio;

            String l_pastaUsuario = tf_pasta.getText();

            JFileChooser fc_selecionadorArquivo = new JFileChooser();

            fc_selecionadorArquivo.setApproveButtonText("Escolher");
            fc_selecionadorArquivo.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

                do{

                    int res = fc_selecionadorArquivo.showOpenDialog(null);
                    
                              fc_selecionadorArquivo.setDialogTitle(Avisos.TIT_JAN_ESC_DIR_ARQ);

                        if(res == JFileChooser.APPROVE_OPTION){

                                //DIRETÓRIO
                                l_diretorio = fc_selecionadorArquivo.getSelectedFile().getAbsolutePath().toString();

                                File l_pastaSelecionada = new File(l_diretorio);
                                File l_pastaArquivos = new File(l_diretorio+"\\"+Diretorios.PASTA_ARQUIVOS);

                                        if(l_pastaUsuario.equals(l_pastaSelecionada.getName()) &&
                                           l_pastaArquivos.exists()){

                                            //esconde os botoes..
                                            bt_redefinirPasta.setVisible(false);
                                            lb_textoLocalEscolhido.setText(Avisos.TEXTO_PASTA_ENCONTRADA_NO_LOCAL+":");
                                            lb_iconeInfo.setText(Avisos.TEXTO_CASO_PASTA_MODIFICADA);
                                            lb_iconeInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icones.INFORMACAO_16)));
                                            lb_iconeInfo.setForeground(Color.black);
                                            lb_local.setText(l_diretorio);
                                            lb_local.setForeground(Color.black);
                                            bt_continuar.setEnabled(true);
                                            l_encontrado = true;     
                                            MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.TEXTO_PASTA_ENCONTRADA_NO_LOCAL, "atu");
                                        
                                        }
                                        //caso nao seja a pasta de arquivos do usuario
                                        else{

                                            //SETA O NOME ORIGINAL DO ARQUIVO
                                            //mostra os botoes..
                                            bt_redefinirPasta.setVisible(true);
                                            lb_textoLocalEscolhido.setText(Avisos.TEXTO_PASTA_N_ENCONTRADA_NO_LOCAL+":");
                                            lb_local.setText(l_pastaSelecionada.getAbsolutePath());
                                            bt_continuar.setEnabled(false);
                                            l_encontrado = false;
                                            MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.TEXTO_PASTA_N_ENCONTRADA_NO_LOCAL, "erro");

                                        }

                        }else if(res == JFileChooser.CANCEL_OPTION){

                            //esconde os botoes..
                            bt_redefinirPasta.setVisible(true);
                            bt_continuar.setEnabled(false);
                            l_encontrado = true;
                            MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.MSG_DIR_NAO_SELEC, "aviso");
                            
                        }

                }while(!l_encontrado);

        }
    }//GEN-LAST:event_bt_escolherLocalActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                         
            //se escolher cancelar depois de ter redefinido... (apaga o local criado)
            if((bt_continuar.getText().equals(Avisos.MSG_LOCAL_ARQ_DEFINIDO) ||
               bt_continuar.getText().equals(Avisos.TEXTO_MINHA_PASTA_FOI_REDEFINIDA)) &&
               bt_continuar.isEnabled()){
                
                File l_localArquivo = new File(lb_local.getText()+"\\"+Diretorios.PASTA_ARQUIVOS);
                File l_local        = new File(lb_local.getText());

                    //caso remova...
                    if(l_localArquivo.delete()){
                        if(l_local.delete()){
                                System.out.println("Local removido: "+l_localArquivo+"!");
                        }
                    }else
                        System.err.println("Nao pode ser deletado");
            }
            
            
        dispose();
        c_continuar = false;
        Moniersn.s_telaMsn.setVisible(true);                                         
        

    }//GEN-LAST:event_jButton2ActionPerformed

    private void bt_continuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_continuarActionPerformed

        String l_local = lb_local.getText();

        if(AtualizarDados.s_AtualizarDados.atualizaLocalArquivos(l_local)){

//            if(bt_continuar.getText().equals(Avisos.TEXTO_ENCONTREI_MINHA_PASTA)){
//
//                //verifica se arquivo estão no diretorio... caso não, atualiza no banco
//                SolicitarDados.s_SolicitarDados.verificaLocalArquivos(LogUsuario.s_cod, l_local);
//
//            }else if(bt_continuar.getText().equals(Avisos.TEXTO_MINHA_PASTA_FOI_REDEFINIDA)){
//                
//                
//                MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.TEXTO_PASTA_REDEFINIDA_NO_LOCAL, "atu");
//                
//             //ok, definido. Concluir!
//            }else{
//                
//                //verifica se arquivo estão no diretorio... caso não, atualiza no banco
//                SolicitarDados.s_SolicitarDados.verificaLocalArquivos(LogUsuario.s_cod, l_local);
//            }

            c_continuar = true;
            dispose();

        }else{
        
            MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(l_local, Avisos.MSG_FALHA_CONEXAO);
            c_continuar = false;
            return;
            
        }

    }//GEN-LAST:event_bt_continuarActionPerformed

private void bt_redefinirPastaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_redefinirPastaActionPerformed

    boolean l_redefinir = MostrarDados.s_MostrarDados.mostraAvisoConfirmacao(Avisos.TITULO_REDEFINIR_PASTA, Avisos.REDEFINIR_PASTA, Icones.PASTA_REDEFINIR);
    
        //caso queira redefinir...
        if(l_redefinir){
        
            String l_localArquivos = LogUsuario.s_localDeArquivosDoUsuario;
            boolean l_escolhido;
            
            lb_local.setText(LogUsuario.s_localDeArquivosDoUsuario);                   
            
                //caso local não possa ser criado...
                if(!SolicitarDados.s_SolicitarDados.criarPastasFacecard(l_localArquivos+"\\"+Diretorios.PASTA_ARQUIVOS)){
                   
                    
                    //mensagem escolha o local
                    MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.TEXTO_N_E_LOCAL_INDISPONIVEL, "aviso");

                        do{
                            //escolhe um novo local valido
                            l_escolhido = escolhaDiretorio(tf_pasta.getText());

                            l_localArquivos = lb_local.getText();
                            
                                //caso tenha escolhido um local...
                                if(l_escolhido){
                                    
                                    //caso o local possa ser criado...
                                    if(SolicitarDados.s_SolicitarDados.criarPastasFacecard(l_localArquivos+"\\"+Diretorios.PASTA_ARQUIVOS))
                                        l_escolhido = true;
                                   
                                    //caso o local nao possa ser criado...
                                    else{
                                        
                                        //msg de aviso
                                        MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.TEXTO_N_E_LOCAL_INDISPONIVEL, "aviso");
                                        l_escolhido = false;
                                    }
                                }
                                
                                //caso não pode escolher o dir
                                else{
                                    MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.TEXTO_N_E_LOCAL_INDISPONIVEL, "aviso");
                                }

                        }while(l_escolhido == false);

                }
                    
                    tf_pasta.setEditable(false);
                    bt_redefinirPasta.setVisible(false);
                    bt_escolherLocal.setText(Avisos.TEXTO_PASTA_OK_ESC_LOC); 
                    lb_textoLocalEscolhido.setText(Avisos.TEXTO_PASTA_FOI_REDEFINIDA_NO_LOCAL);
                    lb_iconeInfo.setText(Avisos.TEXTO_CASO_PASTA_MODIFICADA);
                    lb_iconeInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icones.INFORMACAO_16)));
                    lb_iconeInfo.setForeground(Color.black);
                    lb_local.setForeground(Color.black);
                    bt_continuar.setEnabled(true);
                    bt_continuar.setText(Avisos.TEXTO_MINHA_PASTA_FOI_REDEFINIDA);     

                    MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.TEXTO_PASTA_FOI_REDEFINIDA_NO_LOCAL, "atu");

        }

}//GEN-LAST:event_bt_redefinirPastaActionPerformed

private void tf_pastaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_pastaKeyReleased
        if(!SolicitarDados.s_SolicitarDados.verificaCaracteresInvalidosCadastro(tf_pasta.getText())){
            tf_pasta.setText(tf_pasta.getText().substring(0, (tf_pasta.getText().length() -1)));
            String l_msg = Avisos.MSG_NOME_PASTA_SEM_SIMB_OU_ESP;
            MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(l_msg, "aviso");
            tf_pasta.requestFocus();
        }else{

            tf_pasta.setText(tf_pasta.getText().toLowerCase());
                if(tf_pasta.getText().length() > 15){
                    MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.MSG_EXCESSO_CARACT_15, "aviso");
                    tf_pasta.setText(tf_pasta.getText().substring(0, 15));
                }
        }
}//GEN-LAST:event_tf_pastaKeyReleased

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EscolhaDiretorio dialog = new EscolhaDiretorio(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton bt_continuar;
    public javax.swing.JButton bt_escolherLocal;
    public javax.swing.JButton bt_redefinirPasta;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JLabel lb_iconeInfo;
    public javax.swing.JLabel lb_local;
    public javax.swing.JLabel lb_logoArquivos;
    public javax.swing.JLabel lb_textoLocalEscolhido;
    public javax.swing.JTextField tf_pasta;
    // End of variables declaration//GEN-END:variables

    public boolean escolhaDiretorio(String l_pasta){
    
        boolean l_selecionado;
        
        //CASO CAMPO VAZIO...
        if(l_pasta.isEmpty()){

            MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.MSG_ESCOLHA_PASTA, "aviso");
            l_selecionado = false;

        ///CASO TEXTO DO NOME DA PASTA MAIOR QUE 15 CARACTERES...
        }else if(l_pasta.length() > 15){

            MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.MSG_EXCESSO_CARACT_15, "aviso");
            l_selecionado = false;

        //CASO TUDO OK...
        }else{

            l_selecionado =  false;
            boolean l_ok = SolicitarDados.s_SolicitarDados.verificaCaracteresInvalidosNomeArquivo(l_pasta);
            int res;
                //CASO NAO TENHA CARACTERES INVALIDOS...
                if(l_ok){

                    String l_diretorio;
                    JFileChooser fc_selecionadorArquivo = new JFileChooser();
                    
                    
                        do{
                            fc_selecionadorArquivo.setApproveButtonText("Escolher");
                            fc_selecionadorArquivo.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                            fc_selecionadorArquivo.setDialogTitle(Avisos.TIT_JAN_ESC_DIR_ARQ);

                            res = fc_selecionadorArquivo.showOpenDialog(null);
                            if(res == JFileChooser.APPROVE_OPTION){

                            //DIRETÓRIO
                            l_diretorio = fc_selecionadorArquivo.getSelectedFile().getAbsolutePath().toString();
                            String l_caminhoPastaCriada = l_diretorio+"\\"+l_pasta;
                            
                            File l_pastaCriada = new File(l_caminhoPastaCriada);
                            File l_dirArquivos = new File(l_caminhoPastaCriada+"\\"+Diretorios.PASTA_ARQUIVOS);


                                //caso já exista e botão igual a pasta ok, escol...
                                if(l_pastaCriada.exists() && !l_dirArquivos.exists()){ 
                                    
                                    l_selecionado = false;
                                    MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.MSG_ARQ_NOME_EXISTE, "aviso");
                                    tf_pasta.requestFocus();

                                }else{

                                    l_selecionado = true;

                                    //SETA O NOME ORIGINAL DO ARQUIVO
                                    lb_local.setText(l_pastaCriada.getAbsolutePath());
                                    
                                    bt_continuar.setEnabled(true);

                                    tf_pasta.setEditable(false);

                                        //Caso nao esteja redefinindo pasta...
                                        if(!bt_continuar.getText().equals(Avisos.TEXTO_MINHA_PASTA_FOI_REDEFINIDA)) 
                                            bt_escolherLocal.setText(Avisos.TEXTO_ALTERAR_LOCAL);

                                }

                            }else if(res == JFileChooser.CANCEL_OPTION){
                                l_selecionado = true;
                                MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.MSG_DIR_NAO_SELEC, "aviso");
                                bt_continuar.setEnabled(false);
                                
                            }

                        //repete enquanto nao selecionar local correto ou se ate cancelar operação
                        }while((l_selecionado == false));

                //caso caracteres invalidos
                }else{
                    l_selecionado = false;
                    MostrarDados.s_MostrarDados.mostraMensagemAtualizacao(Avisos.MSG_ARQ_CARACT_INV, "aviso");
                    tf_pasta.requestFocus();
                }


        }
        
        return l_selecionado;
        
    }
    
}
